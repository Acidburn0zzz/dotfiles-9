set nocompatible
filetype off
set omnifunc=syntaxcomplete#Complete

source ~/Projects/dotfiles/configurations/vim/plugins.vim
source ~/Projects/dotfiles/configurations/vim/nerdtree.vim

" ctrlp ignore
set runtimepath^=~/.vim/bundle/ctrlp.vim
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,node_modules,coverage,lib
let ctrlp_show_hidden = 1

set number " Line Numbers
set relativenumber " Relative Line Numbers

set shiftround " When at 3 spaces and I hit >>, go to 4, not 5.

set nofoldenable " Say no to code folding...

syntax enable
set background=dark
colorscheme adio

set nowrap " no wrap
set cursorline " Highlight current line

" Change mapleader
let mapleader = ","
" Set local map leader: http://learnvimscriptthehardway.stevelosh.com/chapters/06.html
let maplocalleader="\\"

" Open .vimrc while in another file and focus on vimrc quickly adding a command
nmap <leader>ev :split $MYVIMRC<cr> <c-w>r

" Quickly source your vimrc
nmap <leader>sv :source $MYVIMRC<cr>

" Open vim-cheat-sheet
nnoremap <leader>cs :tabedit ~/Documents/Notes/vim-cheat-sheet.md<cr> <c-w>r

" Map 0 to go to beginning of test
nmap 0 ^

" Sane default for moving over lines that are wrapped
nmap k gk
nmap j gj

" Sane home row escape
imap jk <esc>

set backupdir=~/.tmp
set directory=~/.tmp

" tabs and stuff----------------------------------------------------------- {{{
set shiftwidth=2
set tabstop=2
set softtabstop=2
set expandtab
"}}}

" Disable escape and arrow keys
inoremap <Left>  <NOP>
inoremap <Right> <NOP>
inoremap <Up>    <NOP>
inoremap <Down>  <NOP>
nnoremap <Left>  <NOP>
nnoremap <Right> <NOP>
nnoremap <Up>    <NOP>
nnoremap <Down>  <NOP>
" }}}

" Markdown --- {{{
:au BufNewFile,BufRead *.md set wrap

" By default, vim thinks .md is Modula-2.
autocmd BufNewFile,BufReadPost *.md set filetype=markdown

" Without this, vim breaks in the middle of words when wrapping
autocmd FileType markdown setlocal nolist wrap lbr
"  }}}

nmap <leader>pj :split package.json<CR>

" air-line
let g:airline_powerline_fonts = 1
let g:airline#extensions#syntastic#enabled=1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ' " airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" syntastic
let g:syntastic_check_on_open=1
let g:syntastic_enable_signs=1

let g:syntastic_javascript_checkers=['eslint', 'flow']

set ofu=syntaxcomplete#Complete
let g:syntastic_mode_map={ 'mode': 'active',
      \ 'active_filetypes': [],
      \ 'passive_filetypes': ['html', 'cpp'] }
let g:syntastic_check_on_open=1

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_error_symbol = "✗"
let g:syntastic_warning_symbol = "⚠"

set fillchars=vert:\│
set cursorline

let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1

let g:notes_directories = ['~/Documents/Notes', '~/Dropbox/Shared Notes']

let g:flow#enable=1
