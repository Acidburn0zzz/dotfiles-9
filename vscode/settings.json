{
  "editor.fontFamily": "Hack, 'Fira Mono', Menlo, Monaco, 'Courier New', monospace",
  "window.title": "${activeEditorLong}",
  "git.autofetch": true,
  // open JSON editor instead of visual picker
  "workbench.settings.editor": "json",
  "workbench.settings.openDefaultSettings": false,
  "workbench.startupEditor": "newUntitledFile",
  "explorer.openEditors.visible": 0, // hide the open editors panel
  "editor.formatOnSave": true,
  "editor.tabCompletion": "on",
  // disable validate because of TSLint and ESLint collision
  "javascript.validate.enable": false,
  "prettier.eslintIntegration": true,
  "gitlens.codeLens.enabled": false,
  "eslint.packageManager": "yarn",
  "[markdown]": {
    "editor.quickSuggestions": false,
    "editor.lineNumbers": "off",
    "editor.formatOnSave": false
  },
  "flow.stopFlowOnExit": false,
  "flow.enabled": true,
  "flow.useNPMPackagedFlow": true,
  "flow.showStatus": true,
  "flow.runOnEdit": false,
  "flow.useLSP": true,
  "todohighlight.isEnable": true,
  "todohighlight.isCaseSensitive": true,

  "todohighlight.defaultStyle": {
    "color": "#F86F65",
    "backgroundColor": "#272B34"
  },
  "todohighlight.keywords": [
    { "text": "FIXME" },
    { "text": "TODO" },
    { "text": "HACK" },
    { "text": "$FlowFixMe" },
    { "text": "$FlowIgnore" },
    { "text": "$FlowExpectError" },
    { "text": "FixMeAny" }
  ],
  "editor.renderIndentGuides": false,
  "files.associations": {
    "Brewfile": "ruby",
    "*.alfredappearance": "json"
  },
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["<leader>", "<leader>"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.showCommands",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "b"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.toggleSidebarVisibility",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "g", "s"],
      "after": [],
      "commands": [
        {
          "command": "workbench.view.scm",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "f", "f"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.quickOpen",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "p", "p"],
      "after": [],
      "commands": [
        {
          "command": "projectManager.listProjects",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "p", "e"],
      "after": [],
      "commands": [
        {
          "command": "workbench.view.explorer",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "p", "f"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.findinfiles",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "m", "t"],
      "after": [],
      "commands": [
        {
          "command": "markdown.extension.checkTaskList",
          "args": []
        }
      ]
    },
    {
      "before": ["<leader>", "'"],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.terminal.toggleTerminal",
          "args": []
        }
      ]
    }
  ],
  "vim.easymotion": true,
  "workbench.colorTheme": "Argon",
  /* DEMO/Screencast settings (defaults for me) */
  "workbench.activityBar.visible": false,
  "editor.minimap.enabled": false,
  "workbench.editor.showIcons": false,
  "markdown-table-formatter.markdownGrammarScopes": [
    "markdown",
    "plaintext"
  ],
  "javascript.updateImportsOnFileMove.enabled": "always",
  "window.zoomLevel": 0
  /* DEMO/Screencast settings */
  // "window.zoomLevel": 2,
  // "workbench.statusBar.visible": false,
  // "editor.lineNumbers": "off",
  // "editor.fontSize": 12,
  // "gitlens.currentLine.enabled": false,
  // "scm.diffDecorations": "none",
  // "editor.codeLens": false,
  // "editor.hideCursorInOverviewRuler": true,
  // "editor.overviewRulerBorder": false,
}
